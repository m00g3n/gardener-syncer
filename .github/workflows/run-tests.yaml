name: tests

on:
  push:
    branches:
      - main
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-*"
    paths-ignore:
      - .reuse
      - LICENSES/
      - LICENSE
      - .gitignore
      - "**.md"

  pull_request_target:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - .reuse
      - LICENSES/
      - LICENSE
      - .gitignore
      - "**.md"
env:
  GITHUB_BASELINE_WORKFLOW_REF: "tests"

permissions:
  contents: read
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}
    - name: Set up cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
          /home/runner/work/gardener-syncer/gardener-syncer/bin
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Set up go environment
      uses: actions/setup-go@v5
      with:
        go-version: 1.24.3
    - name: Run unit tests
      run: go test ./...
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: "code-coverage"
        path: "coverage.txt"

  code_coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    needs: unit-tests
    permissions:
      contents: read
      actions: read
      pull-requests: write
    steps:
      - uses: fgrosse/go-coverage-report@c3951d5d738d8cfe2b24d515f5b7d326c43341e0
        with:
          coverage-artifact-name: "code-coverage"
          coverage-file-name: "coverage.txt"